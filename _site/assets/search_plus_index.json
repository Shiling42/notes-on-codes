{"/pages/Codes/LaTeX/": {
    "title": "Latex",
    "keywords": "Jekyll",
    "url": "/pages/Codes/LaTeX/",
    "body": "Math reaction arrows \\underset{k_b}{\\stackrel{k_f}{\\rightleftharpoons}} ### Clockwised arrow ```LaTeX \\frac{\\prod_\\circlearrowright W_{ij}}{\\prod_\\circlearrowleft W_{ji}} ``` General Color text \\usepackage{xcolor} \\color{red}{} Switch to single column appendix \\onecolumn \\appendix \\numberwithin{equation}{section} \\numberwithin{figure}{section} Figures Basic figure \\begin{figure} \\centering \\includegraphics[width=.9\\columnwidth]{*} \\caption{} \\label{fig:*} \\end{figure} Subfigure \\begin{figure} \\centering \\begin{subfigure}[b]{.8\\columnwidth} \\includegraphics[width=\\linewidth]{} \\caption{} \\label{fig:a} \\end{subfigure} \\begin{subfigure}[b]{.49\\columnwidth} \\includegraphics[width=1\\linewidth]{} \\caption{} \\end{subfigure} \\caption{} \\label{fig:1} \\end{figure}"
  },"/pages/Codes/Mathematica/": {
    "title": "Mathematica",
    "keywords": "Jekyll",
    "url": "/pages/Codes/Mathematica/",
    "body": "Plot Tricks Unified style function (*for many lines, e.g. stochastic trajectories*) Styles = { PlotStyle -&gt; {Thickness[0.005], Opacity[0.4]}, LabelStyle -&gt; Directive[FontFamily -&gt; \"Helvetica\", Black, FontSize -&gt; 15], FrameStyle -&gt; Directive[Black, FontSize -&gt; 15, Thickness[.002]] }; Evaluate@Styles Styles = {PlotTheme -&gt; {\"Scientific\", \"DashedLines\"}, PlotTheme -&gt; {\"Scientific\", \"DashedLines\"}, LabelStyle -&gt; Directive[FontFamily -&gt; \"Helvetica\", Black, FontSize -&gt; 15], FrameStyle -&gt; Directive[Black, FontSize -&gt; 15, Thickness[.002]]}; Theme with linestyle PlotTheme -&gt; {\"Scientific\", \"DashedLines\"} Vertical lines in a plot Epilog -&gt; { Line[ {{x0,y0}, {x1,y1}} ] } ListPlot: dots -&gt; line Joined -&gt; True Legend size LabelStyle -&gt; Directive[FontFamily -&gt; \"Helvetica\", Black, FontSize -&gt; 15] Colorbar Legend PlotLegends -&gt; BarLegend[Automatic, LegendLabel -&gt; \"z\"] Frame ticks and labels size FrameStyle -&gt; Directive[Black, FontSize -&gt; 15, Thick] Unify and resize fig Rasterize[,RasterSize -&gt; 15] Latex input &lt;&lt; MaTeX` MaTeX[\"\\sin{x}\"] Multiple figures in a single plot Column@{ Row@{ } } Plot only on a certain region Method 1: ImplicitRegion {x0, y0} \\[Element] ImplicitRegion[.7 &lt;= x0^2 + y0^2 &lt;= 1, {x0, y0}] Method 2: RegionFunction RegionFunction -&gt; Function[{x, y}, .64 &lt; x^2 + y^2 &lt; 1] Stream and contour plot With[ {reactions = { , }, Show[ StreamPlot[ Evaluate[ { reactions[[1]], reactions[[2]] } ], {r, 0, 1}, {s, 0, 1} ], ContourPlot[ Evaluate[ { 0 == reactions[[1]], 0 == reactions[[2]] } ], {r, 0, 1}, {s, 0, 1} ] ] ], Animation plots = Table[ Plot[ ], {t, 0, 30, .2}]; Export[\"DecayingWave.gif\",plots,\"AnimationRepetitions\"-&gt; \\ \\[Infinity]] ListAnimate[plots] ### 3D plot without light ```Mathematica PlotStyle -&gt; Directive[Black, Glow[RGBColor[\"#1f78b4\"]], Opacity[.6]] ``` ### 3D plot without clipping ```Mathematica ClippingStyle -&gt; None ``` Functional programming Basic use of function f[x_,y_] := Map and apply f[x_,y_] := f@@{x,y} f[x_] := f/@x For loop For[With{},..,..] Math and Models Uniform unicycle Laplacian operator cycle[n_] := Table[If[i == j, -kf - kb, If[i == Mod[(j + 1), n] || i == j + 1, kb, If[Mod[i + 1, n] == j || i + 1 == j, kf, 0]]], {i, n}, {j, n}] Basin of attraction tmax = 10; tol = 0.01; (*Solution to ODE that maps t to {x[t],y[t]}*) sol[x0_?NumericQ, y0_?NumericQ, Req_, \\[Eta]_] := First@NDSolve[ Evaluate[{x[0] == x0, y[0] == y0, x'[t] == \\[Eta] x[t]^2 ((1 - y[t] - x[t]) - Req x[t]) - x[t], y'[t] == \\[Eta] y[t]^2 ((1 - y[t] - x[t]) - Req y[t]) - y[t]}], {x, y}, {t, 0, tmax}] /. HoldPattern[{x -&gt; xi_, y -&gt; yi_}] :&gt; Function[{t}, {xi[t], yi[t]}]; BasinAssign := Function[{f}, Norm[f[tmax]]]; Manipulate[ Show[DensityPlot[ BasinAssign[sol[x0, y0, 0.5, 10^log\\[Eta]]], {x0, 0, 1}, {y0, 0, 1}, PlotPoints -&gt; 20, PlotLegends -&gt; Automatic, PlotRange -&gt; Full], StreamPlot[{\\[Eta] l^2 ((1 - d - l) - 0.5 l) - l, \\[Eta] d^2 ((1 - d - l) - 0.5 d) - d} /. \\[Eta] -&gt; 10^ log\\[Eta], {l, 0, 1}, {d, 0, 1}, FrameLabel -&gt; {\"[B]\", \"[C]\"}], ContourPlot[ Evaluate[{0 == \\[Eta] l^2 ((1 - d - l) - 0.5 l) - l, 0 == \\[Eta] d^2 ((1 - d - l) - 0.5 d) - d} /. \\[Eta] -&gt; 10^ log\\[Eta]], {l, 0, 1}, {d, 0, 1}, PlotPoints -&gt; 100, MaxRecursion -&gt; 2]], {{log\\[Eta], 1}, .7, 2, Appearance -&gt; \"Labeled\"}, {{Req, 0.5}, 0, 1, Appearance -&gt; \"Labeled\"}] General tricks Rule and RuleDelayed The “rule” replacement replace the variables after evaluated, however, the “ruledelayed” replace the variables and then the evaluation starts. In[3]:= {x, x, x} /. x :&gt; RandomReal[] {x, x, x} /. x -&gt; RandomReal[] Out[3]= {0.424537, 0.500212, 0.799267} Out[4]= {0.541989, 0.541989, 0.541989} Joint string and variables dTlist = Table[StringForm[\"\\[CapitalDelta]T=``\", i ], {i, 1, 3}];"
  },"/pages/Codes/Python/": {
    "title": "Python",
    "keywords": "Jekyll",
    "url": "/pages/Codes/Python/",
    "body": "Basics convert ‘1’ to ‘001’ str f'{i:03}' Lambda function max_vb = lambda x,y: (x/y-1)/(x/y+1); Plot Plot in function ## define function to manipulate fig and ax def plotfunc() dis = np.array(pdis) fig, (ax1, ax2,ax3) = plt.subplots(1, 3,figsize=(18,6)) u0 = ax1.imshow(dis[0],cmap=cmap,vmin=0, vmax=vmax0) #ax1.axis('off') ax1.set_xticks([]) ax1.tick_params(labelsize=15) #ax1.set_yticks([]) ax1.set_title()) clb = plt.colorbar() clb.ax.tick_params(labelsize=15) u1 = ax2.imshow() ax2.set_title() ax2.axis('off') clb = plt.colorbar(u1,ax=ax2, fraction=0.046, pad=0.04,orientation=\"horizontal\") clb.ax.tick_params(labelsize=15) utot = ax3.imshow(utot,cmap=cmap,vmin=0, vmax=vmax3) ax3.axis('off') ax3.set_title() clb = plt.colorbar(utot,ax=ax3,fraction=0.046, pad=0.04,orientation=\"horizontal\") clb.ax.tick_params(labelsize=15) return fig Basic figure Subplots Histogram Styles: dashed line style cycle Pandoc Math"
  },"/pages/Codes/bash/": {
    "title": "bash",
    "keywords": "Jekyll",
    "url": "/pages/Codes/bash/",
    "body": "Remote Copy file to local User and user setup who Setup a new user useradd [username] Change to other user su - user2"
  }}
